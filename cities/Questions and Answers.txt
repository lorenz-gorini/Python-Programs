Suppose you have a program that does the following:


- It takes the names of 3 cities as an input (e.g. Milan, Helsinki, Berlin)

- It calculates the total map distance to visit the cities in the given order (no need to think about the shortest path). 

E.g TotalDistance = (Distance Milan / Helsinki) + (Distance Helsinki / Berlin).

The program uses an external service (some map APIs like google maps) to get the coordinates of a city given its name.



1) How would you test this?


- what is your general approach?

+The general approach is to test the software initially with some manual test, adding specific values of the name of the cities.
Particularly I would try what happens when you enter a wrong name for a city, with upper or lower case, or in different languages. 
I would also test what happens when you enter less or more than three city names, or two/three cities with the same name.
Then I would test the application with another group of automatic tests with a big number of different cities (according to the most common use and purpose of the program).




- what are some of the testcase you can think of?

+Random cities, cities very near, cities very far, cities with negative and positive longitude and latitude, cities near the ecuator, 
cities near the greenwich meridian, cities near the last meridian but in both sides, CITIES CLOSE TO THE POLES...


- can you think of any additional testcase considering that the program uses an external service (e.g. google maps)?

+ Cities with similar name, to control which is the behaviour of the external service, according to its specifications.
It should also control cities with the wrong name, with many spaces (before or after the name) or in different languages.
- can you think of any additional testcase if the program is instead a web application and you enter the city names in a form?

+ in this case, a special security test is needed. in addition we have to consider the number of users at the same time and random input characters.

Moreover a good approach consists in using field tester users like my mum. She's an expert bug finder.





I should also check special symbols or missing fields. Particularly I should control what happens if a comma is input in a field (since it is the separator).


2) Can you write a simple implementation of that program?

I corrected the implementation of the proposed code, and I simply managed the case where two or three input names correspond to the same city (or place). 
I also tested the various cases, cited above, noticing that the program works for more than two cities, and it is not sensitive to upper or lower cases, to different languages (italian and english),
 It can also accept different addresses (considering that it is difficult to explain the exact desired address without being able to choose among the results).
I also implemented the case where one (or more) city name is not recognized (no results from openstreetmap.org). In this case the program tries to use the remaining values. 
If only one or no city is available, the program prints an error message.



 The answer can be pseudo-code or even a textual explanation of the required steps.



In case you decide to implement it in real code, an open service to get coordinates from city names is openstreetmap.org :



For milan, helsinki and berlin the following URLs would return you a json with the coordinates:


https://nominatim.openstreetmap.org/search?q=milan&format=json

https://nominatim.openstreetmap.org/search?q=helsinki&format=json

https://nominatim.openstreetmap.org/search?q=berlin&format=json


You can try those in your browser as well to see the resulting json.


There is no need for a complete, or particularly robust implementation, feel free to make any assumption to make your life easier.

As an example most of the times you would get multiple results for a city name. 
In that case feel free to take the coordinates of the first one.

Also feel free to use any python package to help you with the task.
